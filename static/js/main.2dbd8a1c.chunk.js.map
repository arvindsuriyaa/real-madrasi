{"version":3,"sources":["assets/Arvind.jpg","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","elevation","variant","App","useState","open","setOpen","handleClose","event","reason","className","style","width","margin","src","Profile","alt","height","marginTop","marginBottom","onClick","Snackbar","autoHideDuration","onClose","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,G,MAAA,IAA0B,oC,gBCMzC,SAASA,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,IA0CvCG,MAvCf,WAAgB,IAAD,EACWC,oBAAS,GADpB,mBACNC,EADM,KACAC,EADA,KAGPC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJH,GAAQ,IAGV,OACE,sBAAKI,UAAU,MAAMC,MAAO,CAACC,MAAM,MAAOC,OAAO,QAAjD,UACE,sEACA,kGACA,gEACA,4CACA,qBAAKC,IAAKC,EAASC,IAAI,SAASC,OAAQ,MACxC,qBAAKN,MAAO,CAAEO,UAAW,IAAzB,SACE,8CAEE,sBAAKP,MAAO,CAAEO,UAAW,IAAzB,6EAEE,sBAAKP,MAAO,CAAEO,UAAW,GAAIC,aAAc,IAA3C,UACE,wBAAQC,QAAS,kBAAMd,GAAQ,IAA/B,iBADF,WAEE,wBAAQc,QAAS,kBAAMd,GAAQ,IAA/B,2BAKR,cAACe,EAAA,EAAD,CAAUhB,KAAMA,EAAMiB,iBAAkB,IAAMC,QAAShB,EAAvD,SACE,cAAC,EAAD,CAAOgB,QAAShB,EAAaiB,SAAS,QAAtC,+EC7BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2dbd8a1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Arvind.e40080bf.jpg\";","import \"./App.css\";\nimport Profile from \"./assets/Arvind.jpg\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useState } from \"react\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction App() {\n  const [open, setOpen] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"App\" style={{width:'80%', margin:'auto'}}>\n      <h2>Oops... The page ran into some issue</h2>\n      <p>As a CEO, I feel the developer has worked against their integrity</p>\n      <p>Do you think I should Fire him?</p>\n      <h2>Developer:</h2>\n      <img src={Profile} alt=\"arvind\" height={300} />\n      <div style={{ marginTop: 10 }}>\n        <b>\n          Name : Arvind\n          <div style={{ marginTop: 20 }}>\n            Fire Him? He will be punished in accordance to Garuda puranam..!\n            <div style={{ marginTop: 20, marginBottom: 30 }}>\n              <button onClick={() => setOpen(true)}>Yes</button>&nbsp;&nbsp;\n              <button onClick={() => setOpen(true)}>No</button>\n            </div>\n          </div>\n        </b>\n      </div>\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Amaa.. Nee romba Olungu. Poi Net connection check pannu po.\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}